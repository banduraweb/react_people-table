{"version":3,"sources":["components/Person.js","components/PeopleList.js","App.js","index.js"],"names":["Person","_ref","person","id","name","sex","born","died","father","mother","children","age","century","clazz","react_default","a","createElement","Table","Row","className","Cell","concat","react_router_dom","to","toLowerCase","replace","join","TABLE_HEADER","PeopleList","location","useLocation","history","useHistory","searchParams","URLSearchParams","search","_useState","useState","_useState2","Object","slicedToArray","people","setPeople","_useState3","_useState4","isClicked","setClicked","_useState5","_useState6","inputValue","setInputValue","useEffect","fetch","then","response","json","peopleFromServer","preparedData","map","index","objectSpread2","filter","item","child","Math","ceil","_useState7","_useState8","selected","setSelected","sortedPeople","selectedSort","get","selectedOrder","toConsumableArray","sort","b","localeCompare","renderData","includes","Fragment","Container","lib","debounceTimeout","onChange","event","searchValue","target","value","trim","icon","placeholder","celled","inverted","selectable","Header","title","HeaderCell","key","htmlFor","type","e","order","param","set","push","toString","setFilter","checked","length","Body","components_Person","App","exact","react_router","path","render","component","ReactDOM","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.8151f087.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\nimport './table.css';\n\nconst Person = ({ person }) => {\n  const { id,\n    name,\n    sex,\n    born,\n    died,\n    father,\n    mother,\n    children,\n    age,\n    century } = person;\n  const clazz = sex === 'f' ? 'female' : 'male';\n\n  return (\n\n    <Table.Row className={clazz}>\n      <Table.Cell>{id}</Table.Cell>\n      <Table.Cell className={born <= 1650 ? `${clazz} lineThrough` : clazz}>\n        <NavLink\n          className={clazz}\n          to={`/people/${name.toLowerCase().replace(/ /g, '-')}`}\n        >\n          {name}\n        </NavLink>\n      </Table.Cell>\n      <Table.Cell>{sex}</Table.Cell>\n      <Table.Cell>{born}</Table.Cell>\n      <Table.Cell>{died}</Table.Cell>\n      <Table.Cell>{father}</Table.Cell>\n      <Table.Cell>{mother}</Table.Cell>\n      <Table.Cell className={(age) >= 65 ? 'age' : ''}>{age}</Table.Cell>\n      <Table.Cell>{century}</Table.Cell>\n      <Table.Cell>{children.join(', ')}</Table.Cell>\n    </Table.Row>\n\n  );\n};\n\nexport default Person;\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    father: PropTypes.string,\n    mother: PropTypes.string,\n    age: PropTypes.number,\n    century: PropTypes.number,\n  }).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Table, Container } from 'semantic-ui-react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { DebounceInput } from 'react-debounce-input';\nimport Person from './Person';\n\nconst URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\nconst TABLE_HEADER = [\n  'id',\n  'name',\n  'sex',\n  'born',\n  'died',\n  'father',\n  'mother',\n  'age',\n  'century',\n  'children'];\n\nconst PeopleList = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n\n  const getPeopleFromServer = () => fetch(URL)\n    .then(response => response.json());\n\n  const [people, setPeople] = useState([]);\n  let [isClicked, setClicked] = useState(false);  // eslint-disable-line\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    getPeopleFromServer().then((peopleFromServer) => {\n      setPeople(peopleFromServer);\n    });\n  }, []);\n\n  const preparedData = people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    children: people.filter(item => item.father === person.name\n      || item.mother === person.name).map(child => child.name) || [],\n    father: person.father || '',\n    mother: person.mother || '',\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n  }));\n\n  const [selected, setSelected] = useState('');\n\n  const setFilter = (e) => {\n    const order = e.target.value;\n    const param = e.target.id;\n\n    setSelected(param);\n    setClicked((isClicked = !isClicked));\n    searchParams.set('SortBy', param);\n    searchParams.set('order', order);\n    history.push({ search: searchParams.toString() });\n  };\n\n  const sortedPeople = () => {\n    const selectedSort = searchParams.get('SortBy');\n    const selectedOrder = searchParams.get('order');\n\n    if (preparedData[0]) {\n      switch (typeof preparedData[0][selectedSort]) {\n        case 'number':\n          return selectedOrder === 'esc'\n            ? [...preparedData]\n              .sort((a, b) => a[selectedSort] - b[selectedSort])\n            : [...preparedData]\n              .sort((a, b) => b[selectedSort] - a[selectedSort]);\n        case 'string':\n          return selectedOrder === 'esc'\n            ? [...preparedData]\n              .sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\n            : [...preparedData]\n              .sort((a, b) => b[selectedSort].localeCompare(a[selectedSort]));\n        case 'object':\n          return selectedOrder === 'esc'\n            ? [...preparedData]\n              .sort((a, b) => a[selectedSort]\n                .join(',').localeCompare(b[selectedSort].join(',')))\n            : [...preparedData]\n              .sort((a, b) => b[selectedSort]\n                .join(',').localeCompare(a[selectedSort].join(',')));\n        default:\n          return preparedData;\n      }\n    }\n\n    return preparedData;\n  };\n\n  const SearchQuery = (event) => {\n    const searchValue = event.target.value.trim();\n\n    setInputValue(searchValue);\n  };\n\n  const renderData = inputValue === ''\n    ? sortedPeople()\n    : sortedPeople()\n      .filter(({ name, father, mother }) => name\n        .toLowerCase().includes(inputValue)\n        || father.toLowerCase().includes(inputValue)\n        || mother.toLowerCase().includes(inputValue));\n\n  return (\n    <>\n      <Container>\n\n        <DebounceInput\n          debounceTimeout={1000}\n          onChange={SearchQuery}\n          icon=\"search\"\n          placeholder=\"Search...\"\n        />\n      </Container>\n\n      <Table celled inverted selectable>\n        <Table.Header>\n          <Table.Row>\n            {TABLE_HEADER.map(title => (\n              <Table.HeaderCell key={title}>\n                <label className=\"HeaderCell\" htmlFor={title}>\n                  <input\n                    type=\"checkbox\"\n\n                    id={title}\n                    onChange={e => setFilter(e)}\n                    checked={selected === title}\n                    value={(!isClicked)\n                      ? 'esc'\n                      : 'desc'\n                    }\n                  />\n\n                  <span>\n                    {title}\n                  </span>\n                  <p className={selected === title ? 'selected' : ''}>\n                    <i className=\"material-icons\">sort_by_alpha</i>\n                  </p>\n                </label>\n\n              </Table.HeaderCell>\n            ))}\n          </Table.Row>\n        </Table.Header>\n\n        {preparedData && preparedData.length > 0 && renderData.map(person => (\n          <Table.Body key={person.name}>\n\n            <Person person={person} />\n\n          </Table.Body>\n        ))}\n\n      </Table>\n    </>\n  );\n};\n\nexport default PeopleList;\n","import React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport PeopleList from './components/PeopleList';\n\nconst App = () => (\n  <Container>\n    <NavLink\n      className=\"waves-effect waves-light btn\"\n      to=\"/\"\n      exact\n    >\nHome\n    </NavLink>\n\n    <NavLink\n      className=\"waves-effect waves-light btn\"\n      to=\"/people\"\n    >\n      <i className=\"material-icons left\">cloud</i>\nLoad People\n    </NavLink>\n\n    <Switch>\n      <Route exact path=\"/\" render={() => (<h1>Home Page</h1>)} />\n      <Route path=\"/people/:name?\" component={PeopleList} />\n    </Switch>\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App test={123} />\n  </HashRouter>, document.getElementById('root')\n);\n"],"sourceRoot":""}